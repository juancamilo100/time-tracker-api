swagger: '2.0'
info:
  version: 1.0.0
  title: Time Tracker API
  description: API for the Time Tracker App
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
host: 'localhost:3000'
basePath: /api
tags:
  - name: Employees
    description: API for employees in the system
  - name: Portfolios
    description: API for employees' portfolios
  - name: Auth
    description: API for employee access management
schemes:
  - http
securityDefinitions:
  basicAuth:
    type: basic
consumes:
  - application/json
produces:
  - application/json
paths:
  /auth/login:
    post:
      tags:
        - Auth
      description: Login Employee
      parameters:
        - name: employee
          in: body
          description: Employee to login
          schema:
            $ref: '#/definitions/EmployeeLoginRequest'
      produces:
        - application/json
      responses:
        '200':
          description: New portfolio is created
          schema:
            $ref: '#/definitions/TokenResponse'
        '400':
          description: Incomplete request
        '401':
          description: Unauthorized
        '404':
          description: Employee not found
        '500':
          description: Something went wrong
  /auth/register:
    post:
      tags:
        - Auth
      description: Create new employee in system
      parameters:
        - name: employee
          in: body
          description: Employee that we want to create
          schema:
            $ref: '#/definitions/EmployeeCreate'
      produces:
        - application/json
      responses:
        '200':
          description: New employee is created
          schema:
            $ref: '#/definitions/TokenResponse'
        '400':
          description: Incomplete request
        '409':
          description: Employee already exists
        '500':
          description: Something went wrong
  /employees:
    parameters:
      - name: Authorization
        in: header
        type: string
        required: true
    get:
      tags:
        - Employees
      summary: Get all employees in system
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EmployeesWithNoPasswordResponse'
        '500':
          description: Something went wrong
  '/employees/{employeeId}':
    parameters:
      - name: employeeId
        in: path
        required: true
        description: ID of employee that we want to find
        type: string
      - name: Authorization
        in: header
        type: string
        required: true
    get:
      tags:
        - Employees
      summary: Get employee with given ID
      responses:
        '200':
          description: Employee is found
          schema:
            $ref: '#/definitions/EmployeeWithNoPasswordResponse'
        '500':
          description: Something went wrong
    delete:
      summary: Delete employee with given ID
      tags:
        - Employees
      responses:
        '200':
          description: Employee is deleted
          schema:
            $ref: '#/definitions/EmployeeWithNoPasswordResponse'
        '500':
          description: Something went wrong
definitions:
  EmployeeCreate:
    required:
      - employeename
      - password
    properties:
      email:
        type: string
        uniqueItems: true
      employeename:
        type: string
        uniqueItems: true
      password:
        type: string
  EmployeeWithNoPasswordResponse:
    required:
      - employeename
      - password
    properties:
      email:
        type: string
        uniqueItems: true
      employeename:
        type: string
        uniqueItems: true
  EmployeesWithNoPasswordResponse:
    type: array
    items:
      $ref: '#/definitions/EmployeeWithNoPasswordResponse'
  EmployeeLoginRequest:
    required:
      - employeename
      - password
    properties:
      employeename:
        type: string
        uniqueItems: true
      password:
        type: string
  TokenResponse:
    properties:
      auth:
        type: boolean
      token:
        type: string
